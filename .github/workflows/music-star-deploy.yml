name: music-star-deploy.yml
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create properties and yml
        run: |
          echo '${{ secrets.APPLICATION_PROD_YML }}' > ./src/main/resources/application-prod.yml

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'liberica'

      - name: Gradle caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant permission to gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/music-star:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/music-star:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/music-star:${{ github.sha }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_EC2_HOST }}
          username: ${{ secrets.DEV_EC2_USERNAME }}
          key: ${{ secrets.DEV_EC2_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/music-star
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] Stopping old container..."
            docker stop music-star || true
            docker rm music-star || true
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] Pulling new image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/music-star:latest
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] Running container..."
            docker run -d \
              --name music-star \
              -p 8080:8080 \
              -v /home/ubuntu/music-star/logs:/logs \
              --restart unless-stopped \
              ${{ secrets.DOCKERHUB_USERNAME }}/music-star:latest
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] Deployment completed!"